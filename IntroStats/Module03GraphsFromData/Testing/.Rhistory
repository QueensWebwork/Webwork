source('~/Webwork/IntroStats/Module01/generating_datasets.R')
airmiles
anscombe
require(stats); require(graphics)
pairs(attitude, main = "attitude data")
summary(attitude)
summary(fm1 <- lm(rating ~ ., data = attitude))
opar <- par(mfrow = c(2, 2), oma = c(0, 0, 1.1, 0),
mar = c(4.1, 4.1, 2.1, 1.1))
plot(fm1)
summary(fm2 <- lm(rating ~ complaints, data = attitude))
plot(fm2)
par(opar)
attitude
library(xlsx)
install.packages("xlsx")
library(xlsx)
ver
v()
version()
ver()
R.Version()
install.packages("xlsx")
data(cars)
write.xlsx(cars, "cars_dataframe.xlsx")
library(xlsx)
library(xlsx)
library(rJava)
pbinom(2, 5, 0.167)
dbinom(2, 5, 0.167)
dbinom(0, 5, 0.3)
dbinom(1, 5, 0.3)
dbinom(2, 5, 0.3)
dnorm(0)
dnorm(0.5)
dnorm(c(0,0.5,1,1.5,2,2.5,3))
dnorm(c(0.5,1,1.5,2,2.5,3))/2
dbinom(2, 3, 1/6)
dbinom(1, 3, 1/6)
dbinom(3, 5, 0.6)
dbinom(4, 5, 0.6)
dbinom(5, 5, 0.6)
0.3456 + 0.2592 + 0.0777
exp(1.789*2)-1.789
exp(1.789*2)-10*1.789
exp(1.789*2)-20*1.789
exp(1.889*2)-20*1.889
100/6.53
0.04
exp(2)-2^2+5
exp(3)-3^2+5
exp(1)-1^2+5
exp(1)-1^2-3
exp(2)-2^2-3
x = c(18.2, 1.2, 17.8,22.4, 3.1, 5.9, 3.9, 10.6, 24.9, 6.3, 4.7, 12.1)
max(x - mean(x))
y = max(x - mean(x))
sprintf(y, '%.6f')
sprintf('%.6f', y)
x = c(11.1, 10.8, 4.2, 6.8, 3.2, 10.9, 11.4, 7.2, 4.7, 10.3)
mean(x)
r = c(2, 4, 5, 8)
r
mean(r)
x = c(5, 6.5, 4.75, 4.5, 8.25, 5.5, 6.5, 7, 4, 7, 5.25, 5.25)
mean(x)
mean(x)-5
sd(x)/sqrt(n)
n = length(x)
n
sd(x)/sqrt(n)
x = c(5, 6, 10, 11)
mean(x)
x2 = c(5.5, 7.5, 8, 8, 8.5, 10.5)
mean(x2)
1,110 / sqrt(405)
1110 / sqrt(405)
1171/sqrt(276)
mean(c(1102,1290))
.03 * sqrt(40)
0.15/sqrt(40
)
pt(0, 39 )
pt(2, 39 )
pt(-2, 39 )
0.15 / sqrt(40)
qt(c(0.025, 97.5), 39)
\verb@qt( c(0.025, 0.975), 39)@
qt( c(0.025, 0.975), 39)
1.97 - 2.2023 * 0.02372
1.97 + 2.2023 * 0.02372
c(160,200,220,230,120,180,140,130,170,190,80,120,100,170)
x  = c(160,200,220,230,120,180,140,130,170,190,80,120,100,170)
mean(x)
sd(x)
sd(x)/14
se = sd(x)/14
se
qt( c(0.025, 0.975), 13)
xb = mean(x)
xb - se *2.16
xb + se *2.16
dbinom(0, 2, 0.05)
1-dbinom(0, 2, 0.05)
1-dbinom(0, 32, 0.05)
dbinom(0, 32, 0.05)
pt(0, 19)
pt(-1.8, 19)
pt(-1.4, 19)
sum(c(305, 243, 15, 379))
sum(c(305, 243, 125, 379))
r1 = c(305, 243, 125, 379))
r1 = c(305, 243, 125, 379)
r2 = c(238, 202, 96, 186)
r3 = c(123, 37, 58, 104)
sum(r2)
sum(r3)
rbind(r1, r2, r3)
M = rbind(r1, r2, r3)
sum(M, 1)
apply(M, sum, 1)
apply(M, 2, sum)
r1 = c(305, 243, 125, 379)
r2 = c(238, 202, 96, 186)
r3 = c(123, 37, 58, 104)
482/2096
p1 = 482/2096
p2 = 1052/2096
p1*p2 * 2096
p1
p2
p1*p2
M = rbind(r1, r2, r3)
apply(M, 2, sum)
379/669
p1 = 379/669
p1
669/2096
669/2096
1052/2096
669/2096
0.502*0.319
0.16*2096
qchisq(0.05, 6)
chisq.test(M)
qchisq(0.05, 6)
x = seq(0, 5)
x = seq(0, 5)
y = dchisq(x, 6)
plot(x, y)
x = seq(0, 5, by=0.01)
y = dchisq(x, 6)
plot(x, y)
plot(x, y, type="l
")
plot(x, y, type="l")
plot(x, y, type="l")
x = seq(0, 10, by=0.01)
y = dchisq(x, 6)
plot(x, y)
plot(x, y, "l")
qchisq(0.95, 6)
x = seq(0, 60, by=0.1)
y = dchisq(x, 6)
plot(x, y, type="l", main="Chi Squared Dist. (df = 6)")
lines(c(12.6, 12.6), c(0,0..06), col=c("red"))
lines(c(12.6, 12.6), c(0,0..06), col=red)
lines(c(12.6, 12.6), c(0,0.06), col=red)
lines(c(12.6, 12.6), c(0,0.06), col="red")
lines(c(54.5, 54.5), c(0,0.06), col="green", lwd=3)
lines(c(12.6, 12.6), c(0,0.06), col="red", lwd=3)
0.17 * 73
dbinom(3, 5, 0.6)
dbinom(3, 5, 0.6) + dbinom(4, 5, 0.6) + dbinom(5, 5, 0.6)
x = c(1.25, 1.64, 1.91, 2.31, 2.37, 2.38, 284, 2.87, 2.93, 2.94, 2.98, 3.00, 3.09, 3.22, 3.41)
IQR(x)
quantile(.25, x)
quantile(x, 0.25)
quantile(x, 0.75)
3.045 - 2.34
129/1030
x = c(287, 256, 88, 41, 34, 20, 54, 21)
sum(x)
129/801
70 + 13/sqrt(10
)
df(x, 10, 10)
x = seq(0, 10, length.out = 100)
y df(x, 10, 10)
y = df(x, 10, 10)
plot(x, y)
plot(x, y, type="l")
y2 = dchisq(x, 10)
lines(x, y2)
y2 = dchisq(x, 20)
lines(x, y2)
y2 = dchisq(x, 3)
lines(x, y2)
y = df(x, 5, 5)
plot(x, y, type="l")
x = seq(0, 30, length.out = 100)
y2 = dchisq(x, 15)
lines(x, y2)
x = seq(0, 30, length.out = 100)
y = df(x, 5, 5)
plot(x, y, type="l")
y2 = dchisq(x, 15)
lines(x, y2)
mean(dot(x*y2))
x*y2
sum(x*y2)
sum(x*y2)/30
sum(x*y2)* 0.03
sum(x*y2)* 0.3
x = seq(0, 50, length.out = 1000)
y = df(x, 5, 5)
plot(x, y, type="l")
y2 = dchisq(x, 15)
lines(x, y2)
sum(x * y2)*50/1000
source('~/.active-rstudio-document')
source('~/OneDrive - Queen\'s University/IntroStats_LocalWork/Primers/Primer4/Scenario3.R')
rep("C", 15)
clas = c(rep("C", 15), rep("V", 15))
MyData = cbind(clas, x)
names(MyData) = c("Type", "Rate")
lm(Rate ~ Type, data=MyData)
MyData
MyData = cbind(clas, x)
MyData
lm(x ~ clas, data=MyData)
MyData = data.frame(cbind(clas, x))
lm(x ~ clas, data=MyData)
names(MyData)
clas
MyData$clas
MyData$x
x = c(2.3,1.8,1.9,1.8,2.1,2.3,2.0,2.2,2.2,1.5,1.8,2.1,2.3,2.2,2.3,1.6,1.1,0.7,1.0,1.0,0.9,1.2,0.8,0.9,0.6,0.7,0.6,0.8,0.8,1.1);
clas = c(rep("C", 15), rep("V", 15));
MyData = data.frame(cbind(clas, x))
lm(x ~ clas, data=MyData)
y = as.numeric(x)
y
x = c(2.3,1.8,1.9,1.8,2.1,2.3,2.0,2.2,2.2,1.5,1.8,2.1,2.3,2.2,2.3,1.6,1.1,0.7,1.0,1.0,0.9,1.2,0.8,0.9,0.6,0.7,0.6,0.8,0.8,1.1);
x = as.numeric(x);
clas = c(rep("C", 15), rep("V", 15));
MyData = data.frame(cbind(clas, x))
lm(x ~ clas, data=MyData)
clas = as.factor(c(rep("C", 15), rep("V", 15)));
MyData = data.frame(cbind(clas, x))
lm(x ~ clas, data=MyData)
summary(MyFit)
MyFit = lm(x ~ clas, data=MyData)
summary(MyFit)
x = c(2.3,1.8,1.9,1.8,2.1,2.3,2.0,2.2,2.2,1.5,1.8,2.1,2.3,2.2,2.3,1.6,1.1,0.7,1.0,1.0,0.9,1.2,0.8,0.9,0.6,0.7,0.6,0.8,0.8,1.1);
x = as.numeric(x);
clas = as.factor(c(rep("C", 15), rep("V", 15)));
MyData = data.frame("Class"=clas, "Rate"=x)
MyFit = lm(x ~ clas, data=MyData)
summary(MyFit)
update.packages(..., checkBuilt=TRUE)
update.packages(contrast, checkBuilt=TRUE)
update.packages(... = , checkBuilt=TRUE)
y
y
y
y
update.packages(checkBuilt=T)
n
n
n
update.packages(checkBuilt=T)
x = seq(-3, 3, length.out=1000)
y = dnorm(x)
lines(x,y)
source('~/.active-rstudio-document')
xx = seq(1.9, 3, length.out=1000)
yy = dnorm(xx)
plot(xx, yy, type='h', color='red')
y = dnorm(x)
x = seq(-3, 3, length.out=1000)
lines(x,y)
plot(xx, yy, type='h', color='red', xlim=c(-3, 3))
x = seq(-3, 3, length.out=1000)
y = dnorm(x)
plot(x,y)
xx = seq(1.9, 3, length.out=1000)
yy = dnorm(xx)
plot(xx, yy, type='h', color='red', xlim=c(-3, 3), ylim=c(0, 0.4) )
x = seq(-3, 3, length.out=1000)
y = dnorm(x)
plot(x,y)
source('~/.active-rstudio-document')
lines(c(1.8, 1.8), c(0, 0.2), lty=2)
lines(c(1.9, 1.9), c(0, 0.2), lty=2)
lines(c(-3, 3), c(0, 0))
source('~/.active-rstudio-document')
qnorm(1.8)
pnorm(1.8)
1 - pnorm(1.8)
xx = seq(-3, -1.9, length.out=1000)
yy = dnorm(xx)
lines(xx, yy, type="h")
lines(c(-1.9, -1.9), c(0, 0.2), lty=2)
x = c(510, 410, 530, 410, 430, 440)
iqr(x)
IQR(x)
sort(x)
x = c(1.25, 1.64, 1.91, 2.31, 2.37, 2.38, 2.84, 2.87, 2.93, 2.94, 2.98, 3.00, 3.09, 3.22, 3.41)
iqr(x)
IQR(x)
quantile(x, 0.25)
y = c(7.5, 8.6, 8.9, 8.5, 9.4, 10.7, 15.1)
IQR(y)
quantile(y, 0.25)
quantile(y, 0.75)
summary(x)
summary(y)
x = c(1.25, 1.64, 1.91, 2.31, 2.37, 2.38, 2.84, 2.87, 2.93, 2.94, 2.98, 3.00, 3.09, 3.22, 3.41)
IQR(x)
summary(x)
c(0, 1, 2, 3, 4)
c(0, 1, 2, 3, 4)
z = c(0, 1, 2, 3, 4)
quantile(z)
quantile(0:11)
quantile(0:10)
quantile(0:9)
quantile(0:12)
summary(1:5)
summary(1:7)
summary(1:97)
summary(1:9)
summary(1:9)
quantile(1:9)
quantile(1:7)
summary(y)
y = c(7.5, 8.5, 8.6, 8.9, 9.4, 10.7, 15.1)
summary(x)
x = c(3, 7, 7, 5, 9, 4, 6)
mean(x)
sum(x)
sort(x)
x - mean(x)
x - mean(x)
x = c(3, 7, 7, 5, 9, 4, 6)
mean(x)
sum(x)
(x - mean(x))
(x - mean(x))^2
var(x)
sum( (x - mean(x))^2)/6
var(x)
sd(x)
quantile(x)
x = c(170, 187, 192, 194, 195, 197, 198, 199, 200)
mean(x)
sum(x)
sort(x)
(x - mean(x))
(x - mean(x))^2
sum( (x - mean(x))^2)/6
var(x)
sd(x)
quantile(x)
IQR(x)
x = c(3, 7, 7, 5, 9, 4, 6)
mean(x)
sum(x)
sort(x)
(x - mean(x))
(x - mean(x))^2
sum( (x - mean(x))^2)/6
var(x)
sd(x)
quantile(x)
IQR(x)
x = c(170, 187, 192, 194, 195, 197, 198, 199, 200)
mean(x)
sum(x)
sort(x)
(x - mean(x))
(x - mean(x))^2
sum( (x - mean(x))^2)/6
var(x)
sd(x)
setwd("~/Webwork/IntroStats/Module03_Datasets")
set.seed(5987235)
library(data.table)
library(xlsx)
xlsx.read("StressReliefA.xlsx")
M = read.xlsx("StressReliefA.xlsx")
M = read.xlsx("StressReliefA.xlsx", 1)
names(M)
table(M$Treatment, M$Gender)
library(data.table)
library(xlsx)
# We want 2 categorical and 1 numeric
# for a contingency table and a boxplot
M = read.xlsx("StressReliefA.xlsx", 1)
names(M)
table(M$Treatment, M$Gender)
M = read.xlsx("StressReliefB.xlsx", 1)
names(M)
table(M$Treatment, M$Gender)
M = read.xlsx("StressReliefC.xlsx", 1)
names(M)
table(M$Treatment, M$Gender)
M = read.xlsx("StressReliefD.xlsx", 1)
names(M)
table(M$Treatment, M$Gender)
MyData = read.csv("../../Module03_Datasets/StressReleifA.xlsx")
setwd("~/Webwork/IntroStats/Module03GraphsFromData/Testing")
MyData = read.csv("../../Module03_Datasets/StressReleifA.xlsx")
library(xlsx)
MyData = read.xlsx("../../Module03_Datasets/StressReleifA.xlsx")
MyData = read.xlsx("../../Module03_Datasets/StressReleifA.xlsx", 1)
MyData = read.xlsx("../../Module03_Datasets/StressReleifA.xlsx", 1)
MyData = read.xlsx("../../Module03_Datasets/StressReliefA.xlsx", 1)
MyData = read.xlsx("../../Module03_Datasets/StressReliefA.xlsx", 1)
boxplot(MyData$Sex, MyData$StressReduction, xlab='Gender', ylab = "Stress Reduc.")
boxplot(MyData$StressReduction ~ MyData$Sex , xlab='Gender', ylab = "Stress Reduc.")
names(MyData)
boxplot(MyData$StressReduction ~ MyData$Gender , xlab='Gender', ylab = "Stress Reduc.")
MyData = read.xlsx("../../Module03_Datasets/StressReliefA.xlsx", 1)
png("StressReliefA.png", width=300, height=300)
boxplot(MyData$StressReduction ~ MyData$Gender , xlab='Gender', ylab = "Stress Reduc.")
dev.off();
source('~/Webwork/IntroStats/Module03GraphsFromData/Testing/GraphTesting2.R')
source('~/Webwork/IntroStats/Module03GraphsFromData/Testing/GraphTesting2.R')
print(table(MyData$Treatment, MyData$Gender))
source('~/Webwork/IntroStats/Module03GraphsFromData/Testing/GraphTesting2.R')
MyData = read.xlsx("../../Module03_Datasets/StressReliefC.xlsx", 1)
png("StressReliefC_Boxplot.png", width=300, height=300)
boxplot(MyData$StressReduction ~ MyData$Gender , xlab='Gender', ylab = "Stress Reduc.")
dev.off();
print(table(MyData$Treatment, MyData$Gender))
boxplot(MyData$StressReduction ~ MyData$Gender , xlab='Gender', ylab = "Stress Reduc.")
source('~/Webwork/IntroStats/Module03GraphsFromData/Testing/GraphTesting2.R')
MyData = read.xlsx("../../Module03_Datasets/StressReliefD.xlsx", 1)
boxplot(MyData$StressReduction ~ MyData$Gender , xlab='Gender', ylab = "Stress Reduc.")
MyData = read.xlsx("../../Module03_Datasets/StressReliefC.xlsx", 1)
boxplot(MyData$StressReduction ~ MyData$Gender , xlab='Gender', ylab = "Stress Reduc.")
print(table(MyData$Treatment, MyData$Gender))
boxplot(MyData$StressReduction ~ MyData$Gender , xlab='Gender', ylab = "Stress Reduc.")
