#DESCRIPTION
# Number of variables/sample size
#ENDDESCRIPTION

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros(
"PG.pl",
"PGbasicmacros.pl",
"PGchoicemacros.pl",
"PGanswermacros.pl",
"MathObjects.pl",
"PGauxiliaryFunctions.pl",
"extraAnswerEvaluators.pl",
"parserRadioButtons.pl",
"parserMultiAnswer.pl",
"parserPopUp.pl",
"parserRadioButtons.pl",
"PGML.pl",
);

TEXT(beginproblem());
$showPartialCorrectAnswers = 0;  

Context("Numeric");

@de_arr = (
"3y'+ 4y = e^t",
"7y'' - 2y' = 0",
"y''' + y = 10 \sin(t)",
"e^t y'' - e^(-t) y = 10 \sin(t)",
"y'' + t^2 e^t y  = 0",
"y' = y - 10", 
"(y')^2 = \sin(t)",
"y' = \sqrt{y}",
"y''' - 3y^3 = 10 + \cos(t)",  
"y' -(y)(y') = 0",
"y^{(4)}  + y = 0",
"(y')^4  + y = 0",
);

@de_order = ( 1, 2, 3, 2, 2, 1, 1, 1, 3, 1, 4, 1);
@de_type = (
"Linear",
"Linear",
"Linear",
"Linear",
"Linear",
"Linear",
"Non-linear",
"Non-linear",
"Non-linear",
"Non-linear",
"Non-linear",
"Linear",
);

@shuffled = shuffle(scalar(@de_arr));
$shuffled_text = join(", ", @shuffled);

$eq1 = $shuffled[0];
$radio1 = RadioButtons(
  ["Linear","Non-linear"],
  $de_type[$eq1], # correct answer
  last => ["Non-linear"],
);
$de1 = $de_arr[$eq1];
$order1 = Compute($de_order[$eq1]);

$eq2 = $shuffled[1];
$radio2 = RadioButtons(
  ["Linear","Non-linear"],
  $de_type[$eq2], # correct answer
  last => ["Non-linear"],
);
$de2 = $de_arr[$eq2];
$order2 = Compute($de_order[$eq2]);

Context()->texStrings;
BEGIN_PGML

a) Classify the differential equation [` [$de1] `].

    [@ $radio1->buttons() @]*

    Order: [_________] (enter a number, e.g. "1" for a first-order DE, "2" for second order, etc.)
 
b) Classify the differential equation [` [$de2] `].

    [@ $radio2->buttons() @]*
 
    Order: [_________] (enter a number, e.g. "1" for a first-order DE, "2" for second order, etc.)
END_PGML

ANS( $radio1->cmp() );
ANS( $order1->cmp() );
ANS( $radio2->cmp() );
ANS( $order2->cmp() );

Context()->normalStrings;


ENDDOCUMENT();        # This should be the last executable line in the problem.




