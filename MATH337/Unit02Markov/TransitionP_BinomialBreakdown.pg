
## DESCRIPTION
## Operations Research / Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('steady state', 'eigenvalues' 'eigenvectors')
## Tagged by aableson

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Eigenvalues')
## Date('')
## Author('')
## Institution('Queens')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.
loadMacros(
        "PGbasicmacros.pl",
        "PGchoicemacros.pl",
        "PGanswermacros.pl",
        "PGgraphmacros.pl",
        "PGmatrixmacros.pl",
	"PGauxiliaryFunctions.pl",
	"parserPopUp.pl",
	"MathObjects.pl",
        );
 
TEXT(beginproblem());    
Context("Numeric");
Context()->flags->set(tolerance=>.01);
$showPartialCorrectAnswers = 1;

$X_max = random(4, 5);
$row = random(2, $X_max - 1);

@states = ();
@ans_bar = ();
@row_vals = ();
for ($i = 0; $i <= $X_max; $i++){
  push(@states, $i);
  push(@ans_bar, ans_rule(5));
  if ($i > $row +1) {  # possibility of this many after breakdowns
      push(@row_vals,  Compute("0"));
  }
  elsif ($i == 0) {
      push(@row_vals,  Compute("0"));
  } 
  else {
    $a = $row-$i + 1; # req'd breakdowns to reach $i from $row
    $p = fact($row)/fact($a)/fact($row-$a) * 0.2**$a * 0.8**($row-$a);
      # round this value, because the p values in the table only have 3 digits past the decimal
      $p = sprintf('%.3f', $p);
      push(@row_vals,  Compute("$p"));
  }
}

# Binomial reference table
$bino_start = begintable(7);
$bino_head = row("","x=0","x=1","x=2","x=3","x=4","x=5","x=6");
$bino_1 = row("N=1", "0.800", "0.200");
$bino_2 = row("N=2", "0.640", "0.320", "0.040");
$bino_3 = row("N=3", "0.512", "0.384", "0.096", "0.008");
$bino_4 = row("N=4", "0.410", "0.410", "0.154", "0.026", "0.002");
$bino_5 = row("N=5", "0.328", "0.410", "0.205", "0.051", "0.006", "0.000");
$bino_6 = row("N=6", "0.262", "0.393", "0.246", "0.082", "0.015", "0.002", "0.000");
$bino_end   = endtable();

# Define the answer table
$table_start = begintable($X_max + 2);
$table_row1  = row( "state i\j", @states);
$table_row2  = row( "$row ", @ans_bar);
$table_end   = endtable();

BEGIN_TEXT 

Consider the Markov chain model for the number of working machines in a factory.   There are $X_max machines in total (working and not). 
<ul>
<li>\(X_t\) represents the number of machines that are working at the start of the day. 
  <li>Given that \(X_t\) are working at the start of the day, the number that will $BBOLD break down $EBOLD that day will be $BBOLD binomially $EBOLD distributed, with \(N = X_t\) (current number of working machines) and \(p = 0.2\) (each individual machine has a 20$PERCENT chance of breaking).
  <li>If \(X_t\) is less than the total number of machines (i.e. at least one machine is broken), then exactly one machine will be repaired that day.
<li> The order is $BBOLD first $EBOLD any breakdowns happen, and then ($BBOLD if $EBOLD the original \(X_t\) is less than $X_max), one machine is repaired.

  <li> The net change between \(X_t\) and \(X_{t+1}\) will be the combined effect of the binomially distributed breakdowns and the single repair (if any).
</ul>

  Fill in the one-step transition probabilities for the row for state $row of the transition probability matrix \(P\) for this system.

$table_start
$table_row1
$table_row2
$table_end

Reference:
Table with binomial probabilities for \(p = 0.2\):

$bino_start
$bino_head
$bino_1
$bino_2
$bino_3
$bino_4
$bino_5
$bino_6
$bino_end

END_TEXT
  foreach my $rowv (@row_vals) {
    ANS( $rowv->cmp());
}

BEGIN_SOLUTION


END_SOLUTION


ENDDOCUMENT();       # This should be the last executable line in the problem.
