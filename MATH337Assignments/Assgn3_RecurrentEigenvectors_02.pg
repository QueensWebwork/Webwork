
## DESCRIPTION
## Operations Research / Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('steady state', 'eigenvalues' 'eigenvectors')
## Tagged by aableson

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Eigenvalues')
## Date('')
## Author('')
## Institution('Queens')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.
loadMacros(
        "PGbasicmacros.pl",
        "PGchoicemacros.pl",
        "PGanswermacros.pl",
        "PGgraphmacros.pl",
        "PGmatrixmacros.pl",
	"parserPopUp.pl",
	"MathObjects.pl",
        );
 
TEXT(beginproblem());    
Context("Numeric");
Context()->flags->set(tolerance=>.01);
$showPartialCorrectAnswers = 1;


# 5-state system
# Only transfers from self t:o (self and +1 neighbour) 
# Randomly one row will have a 1 in the +1 neighbour slot

# Generated by Webwork/ProblemLibrary/MATH337Assignments/MATLAB/CreateRecurrentP_1.m
#[[0.9,0.1,0.0,0.0,0.0],[0.0,0.0,1.0,0.0,0.0],[0.0,0.0,0.8,0.2,0.0],[0.0,0.0,0.0,0.9,0.1],[0.2,0.0,0.0,0.0,0.8]]
#Eigens of P
#1.00
#[0.447,0.447,0.447,0.447,0.447]
#0.69
#[-0.295,0.629,0.432,-0.244,0.521]
#0.00
#[0.110,-0.993,-0.001,0.003,-0.028]
#Eigens of P transpose
#0.00
#[-0.005,-0.615,0.769,-0.171,0.021]
#1.00
#[0.631,0.063,0.316,0.631,0.316]
#0.69
#[-0.436,-0.063,0.560,-0.526,0.464]
#@long_term_probs = qw(0.32258 0.03226 0.16129 0.32258 0.16129 )

$P = Matrix->new_from_array_ref([[0.9,0.1,0.0,0.0,0.0],[0.0,0.0,1.0,0.0,0.0],[0.0,0.0,0.8,0.2,0.0],[0.0,0.0,0.0,0.9,0.1],[0.2,0.0,0.0,0.0,0.8]]);
$P_v1 = Matrix->new_from_array_ref([[0.447,0.447,0.447,0.447,0.447]]);
$P_v2 = Matrix->new_from_array_ref([[-0.295,0.629,0.432,-0.244,0.521]]);
$P_v3 = Matrix->new_from_array_ref([[0.110,-0.993,-0.001,0.003,-0.028]]);
$Pt_v1 = Matrix->new_from_array_ref([[0.631,0.063,0.316,0.631,0.316]]);
$Pt_v2 = Matrix->new_from_array_ref([[-0.005,-0.615,0.769,-0.171,0.021]]);
$Pt_v3 = Matrix->new_from_array_ref([[-0.436,-0.063,0.560,-0.526,0.464]]);
$e_1 = sprintf('%.2f', 1.00);
$e_2 = sprintf('%.2f', 0.21);
$e_3 = sprintf('%.2f', 0.04);
@long_term_probs = qw(0.32258 0.03226 0.16129 0.32258 0.16129 );

# Decide on the starting and ending states; both can be random, and they _can_ be the same.
$N = 5;
$start_state = random(1, $N);
$end_state = random(1, $N);
$long_term_p = $long_term_probs[$end_state - 1];
$long_term_p = Compute("$long_term_p");

# Here is the normalized distribution for the long term
#$one_v = $Pt_v1->one(1, $N);
#$total = vec_dot($Pt_v1, $one_v);

# Build the system type
$mc1 = new_multiple_choice();
$mc1->qa("", "Yes");
$mc1->makeLast("Yes", "No");

# Build the location of probability
$mc2 = new_multiple_choice();
$mc2->qa("", "Every entry in column $end_state.");
$mc2->makeLast("Every entry in the matrix.", 
"Every entry in row $start_state.",
"Every entry in column $end_state.",
"The entry in row $start_state, column $end_state.");
# Note the use of mbox below, to get 'P = matrix...' all in one equation.

BEGIN_TEXT 

Consider the Markov chain implied by the one-step transition matrix P below.
$BR
\{mbox( '\(P = \)', display_matrix($P))  \}  
$BR
  Here are the normalized real eigenvectors of \(P\), written as row vectors, and with their corresponding eigenvalues (\(\lambda\)):
  \{  mbox(  '\(\lambda = $e_1\)' , display_matrix($P_v1)) \}
  \{  mbox(  '\(\lambda = $e_2\)' , display_matrix($P_v2)) \}
  \{  mbox(  '\(\lambda = $e_3\)' , display_matrix($P_v3)) \}
$BR
  Similarly, here are the normalized real eigenvalues and corresponding vectors of \(P\) $BBOLD transpose$EBOLD. 

  \{  mbox(  '\(\lambda = $e_1\)' , display_matrix($Pt_v1)) \}
  \{  mbox(  '\(\lambda = $e_2\)' , display_matrix($Pt_v2)) \}
  \{  mbox(  '\(\lambda = $e_3\)' , display_matrix($Pt_v3)) \}

$PAR
A) Is this Markov chain $BBOLD irreducible $EBOLD? \{  $mc1->print_a() \}    
$PAR
B) If the states are numbered from 1 to \($N\), and you $BBOLD start in state \{$start_state\} $EBOLD, what is the probability in the long run that you will be in $BBOLD state \{$end_state\} $EBOLD? 
Give your answer rounded to 3 digits after the decimal.
$BR
Probability = \{ans_rule(15) \}
$BR
Note that this question is deliberately ambiguous; it describes either:
<ul>
<li>the probability of ending in an absorbing state if there is one, or 
<li>the long-term probability of being found in a recurrent state.  
</ul>Use whichever interpretation is appropriate given the model.

$PAR

 C) Consider the matrix defined by \( \lim_{n\to \infty} P^n\). Where
in this matrix would you $BBOLD also $EBOLD find the value you gave in part B)? 
Select the $BBOLD most general $EBOLD answer.
\{  $mc2->print_a() \}    


END_TEXT

ANS( radio_cmp( $mc1->correct_ans() ) );
ANS( $long_term_p->cmp() );
ANS( radio_cmp( $mc2->correct_ans() ) );
BEGIN_SOLUTION


END_SOLUTION


ENDDOCUMENT();       # This should be the last executable line in the problem.
