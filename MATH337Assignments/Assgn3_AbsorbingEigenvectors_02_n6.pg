
## DESCRIPTION
## Operations Research / Linear Algebra
## ENDDESCRIPTION

## KEYWORDS('steady state', 'eigenvalues' 'eigenvectors')
## Tagged by aableson

## DBsubject('Linear Algebra')
## DBchapter('Matrices')
## DBsection('Eigenvalues')
## Date('')
## Author('')
## Institution('Queens')
## TitleText1('')
## EditionText1('')
## AuthorText1('')
## Section1('')
## Problem1('')

DOCUMENT();        # This should be the first executable line in the problem.
loadMacros(
        "PGbasicmacros.pl",
        "PGchoicemacros.pl",
        "PGanswermacros.pl",
        "PGgraphmacros.pl",
        "PGmatrixmacros.pl",
	"parserPopUp.pl",
	"MathObjects.pl",
        );
 
TEXT(beginproblem());    
Context("Numeric");
Context()->flags->set(tolerance=>.01);
$showPartialCorrectAnswers = 1;


# 6-state system
# Randomly two rows will have a 1 in diagonal

# Generated by Webwork/ProblemLibrary/MATH337Assignments/MATLAB/CreateAbsorbingP_1.m
$P = Matrix->new_from_array_ref([[1.0,0.0,0.0,0.0,0.0,0.0],[0.3,0.4,0.0,0.3,0.0,0.0],[0.0,0.3,0.3,0.0,0.4,0.0],[0.0,0.0,0.3,0.4,0.0,0.3],[0.0,0.0,0.0,0.0,1.0,0.0],[0.0,0.1,0.0,0.0,0.5,0.4]]);
#Eigens of P
$P_v1 = Matrix->new_from_array_ref([[0.831,0.488,0.209,0.145,0.000,0.081]]);
$P_v2 = Matrix->new_from_array_ref([[0.000,0.230,0.417,0.460,0.557,0.502]]);
$P_v3 = Matrix->new_from_array_ref([[0.000,-0.608,-0.447,-0.626,0.000,-0.197]]);
$P_v4 = Matrix->new_from_array_ref([[0.000,-0.174,-0.697,0.015,0.000,0.696]]);
#Eigens of P transpose
$Pt_v1 = Matrix->new_from_array_ref([[1.000,0.000,0.000,0.000,0.000,0.000]]);
$Pt_v2 = Matrix->new_from_array_ref([[0.000,0.000,0.000,0.000,1.000,0.000]]);
$Pt_v3 = Matrix->new_from_array_ref([[-0.308,0.299,0.214,0.291,-0.778,0.283]]);
$Pt_v4 = Matrix->new_from_array_ref([[-0.003,0.006,-0.276,-0.069,-0.485,0.827]]);
$j1 = 1;
@a_i1 = qw(1.00000 0.58741 0.25175 0.17483 0.00000 0.09790 );
$j2 = 5;
@a_i2 = qw(0.00000 0.41259 0.74825 0.82517 1.00000 0.90210 );
$e_1 = sprintf('%.2f', 1.00);
$e_2 = sprintf('%.2f', 1.00);
$e_3 = sprintf('%.2f', 0.71);
$e_4 = sprintf('%.2f', 0.37);

# Decide on the starting and ending states; both can be random, and they _can_ be the same.
$N = 6;
$end_state = list_random($j1, $j2);
$start_state = random(1, $N); # Make sure the start state is different than end
while ($start_state == $end_state) {
  $start_state = random(1, $N);
}
# Compute the correct absorption probability
if ($end_state == $j1)  {
  $long_term_p = $a_i1[$start_state - 1];
} else  {
  $long_term_p = $a_i2[$start_state - 1];
}
$long_term_p = Compute("$long_term_p");

# Build the system type
$mc1 = new_multiple_choice();
$mc1->qa("", "No");
$mc1->makeLast("Yes", "No");

# Build the location of probability
$mc2 = new_multiple_choice();
$mc2->qa("", "The entry in row $start_state, column $end_state.");
$mc2->makeLast("Every entry in the matrix.", 
"Every entry in row $start_state.",
"Every entry in column $end_state.",
"The entry in row $start_state, column $end_state.");
# Note the use of mbox below, to get 'P = matrix...' all in one equation.

BEGIN_TEXT 

Consider the Markov chain implied by the one-step transition matrix P below.
$BR
\{mbox( '\(P = \)', display_matrix($P))  \}  
$BR
  Here are the some of the normalized real eigenvectors of \(P\), written as row vectors, and with their corresponding eigenvalues (\(\lambda\)):
  \{  mbox(  '\(\lambda = $e_1\)' , display_matrix($P_v1)) \}
  \{  mbox(  '\(\lambda = $e_2\)' , display_matrix($P_v2)) \}
  \{  mbox(  '\(\lambda = $e_3\)' , display_matrix($P_v3)) \}
  \{  mbox(  '\(\lambda = $e_4\)' , display_matrix($P_v4)) \}
$BR
  Similarly, here are some of the normalized real eigenvalues and corresponding vectors of \(P\) $BBOLD transpose$EBOLD. 

  \{  mbox(  '\(\lambda = $e_1\)' , display_matrix($Pt_v1)) \}
  \{  mbox(  '\(\lambda = $e_2\)' , display_matrix($Pt_v2)) \}
  \{  mbox(  '\(\lambda = $e_3\)' , display_matrix($Pt_v3)) \}
  \{  mbox(  '\(\lambda = $e_4\)' , display_matrix($Pt_v4)) \}

$PAR
A) Is this Markov chain $BBOLD irreducible $EBOLD? \{  $mc1->print_a() \}    
$PAR
B) If the states are numbered from 1 to \($N\), and you $BBOLD start in state \{$start_state\} $EBOLD, what is the probability in the long run that you will be in $BBOLD state \{$end_state\} $EBOLD? 
Give your answer rounded to 3 digits after the decimal.
$BR
Probability = \{ans_rule(15) \}
$BR
Note that this question is deliberately ambiguous; it describes either:
<ul>
<li>the probability of ending in an absorbing state if there is one, or 
<li>the long-term probability of being found in a recurrent state.  
</ul>Use whichever interpretation is appropriate given the model.

$PAR

 C) Consider the matrix defined by \( \lim_{n\to \infty} P^n\). Where
in this matrix would you $BBOLD also $EBOLD find the value you gave in part B)? 
Select the $BBOLD most general $EBOLD answer.
\{  $mc2->print_a() \}    


END_TEXT

ANS( radio_cmp( $mc1->correct_ans() ) );
ANS( $long_term_p->cmp() );
ANS( radio_cmp( $mc2->correct_ans() ) );
BEGIN_SOLUTION


END_SOLUTION


ENDDOCUMENT();       # This should be the last executable line in the problem.
